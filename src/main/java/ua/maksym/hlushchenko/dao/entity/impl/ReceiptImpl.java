package ua.maksym.hlushchenko.dao.entity.impl;

import lombok.Data;
import ua.maksym.hlushchenko.dao.db.sql.annotations.*;
import ua.maksym.hlushchenko.dao.entity.Book;
import ua.maksym.hlushchenko.dao.entity.Receipt;
import ua.maksym.hlushchenko.dao.entity.impl.role.ReaderImpl;
import ua.maksym.hlushchenko.dao.entity.role.Reader;

import java.time.LocalDateTime;
import java.time.temporal.ChronoUnit;
import java.util.*;

@Data
@Table("receipt")
public class ReceiptImpl implements Receipt {

    @Id(value = "id", autoGenerated = true)
    private int id;

    @ManyToOne(relatedEntity = ReaderImpl.class)
    @JoinColumn("reader_id")
    private Reader reader;

    @Column("time")
    private LocalDateTime dateTime;

    @ManyToMany(relatedEntity = BookImpl.class,
            joinTable = @JoinTable(name = "receipt_has_book",
            joinColumn = "receipt_id", inverseColumn = "book_id"))
    private List<Book> books = new ArrayList<>();

    @Override
    public void setDateTime(LocalDateTime dateTime) {
        this.dateTime = dateTime.truncatedTo(ChronoUnit.SECONDS);
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof Receipt)) return false;
        Receipt receipt = (Receipt) o;
        return getId() == receipt.getId() &&
                Objects.equals(getReader(), receipt.getReader()) &&
                Objects.equals(getDateTime(), receipt.getDateTime());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getId(), getReader(), getDateTime());
    }
}
