package ua.maksym.hlushchenko.dao.entity.impl.role;

import lombok.Data;
import lombok.ToString;
import ua.maksym.hlushchenko.dao.db.sql.annotations.Column;
import ua.maksym.hlushchenko.dao.db.sql.annotations.Id;
import ua.maksym.hlushchenko.dao.db.sql.annotations.OneToMany;
import ua.maksym.hlushchenko.dao.db.sql.annotations.Table;
import ua.maksym.hlushchenko.dao.entity.*;
import ua.maksym.hlushchenko.dao.entity.impl.ReceiptImpl;
import ua.maksym.hlushchenko.dao.entity.impl.SubscriptionImpl;
import ua.maksym.hlushchenko.dao.entity.role.Reader;

import java.util.*;

@Data
@ToString(callSuper = true, exclude = {"receipts", "subscriptions"})
@Table("reader")
public class ReaderImpl extends AbstractUserImpl implements Reader {
    @Id(value = "user_id", autoGenerated = false)
    private int id;

    @Column("blocked")
    private boolean blocked;

    @OneToMany(mappedBy = "reader", relatedEntity = ReceiptImpl.class)
    private List<Receipt> receipts;

    @OneToMany(mappedBy = "reader", relatedEntity = SubscriptionImpl.class)
    private List<Subscription> subscriptions;

    @Override
    public Role getRole() {
        return Role.READER;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof Reader)) return false;
        Reader reader = (Reader) o;
        return super.equals(o) && isBlocked() == reader.isBlocked();
    }

    @Override
    public int hashCode() {
        return Objects.hash(super.hashCode(), isBlocked());
    }
}
